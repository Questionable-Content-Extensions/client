name: 'Publish new release'

on:
    pull_request:
        branches:
            - main
        types:
            - closed

jobs:
    release:
        name: Publish new release
        runs-on: ubuntu-latest
        # only merged pull requests that begin with 'release/' or 'hotfix/' must trigger this job
        if: github.event.pull_request.merged == true &&
            (startsWith(github.event.pull_request.head.ref, 'release/') || startsWith(github.event.pull_request.head.ref, 'hotfix/'))

        steps:
            - name: Extract version from branch name (for release branches)
              if: startsWith(github.event.pull_request.head.ref, 'release/')
              run: |
                  BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
                  VERSION=${BRANCH_NAME#release/}

                  echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

            - name: Extract version from branch name (for hotfix branches)
              if: startsWith(github.event.pull_request.head.ref, 'hotfix/')
              run: |
                  BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
                  VERSION=${BRANCH_NAME#hotfix/}

                  echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

            - uses: actions/checkout@v3

            - name: Use Node.js 18.x
              uses: actions/setup-node@v3
              with:
                  node-version: 18.x
                  cache: 'npm'

            - name: Install Node modules
              run: npm ci

            - name: Build scripts
              run: npm run build-userscript

            - name: Extract release notes
              id: extract-release-notes
              uses: ffurrer2/extract-release-notes@v1
              with:
                  changelog_file: CHANGELOG.md

            - name: Release
              uses: softprops/action-gh-release@v1
              with:
                  target_commitish: ${{ github.event.pull_request.merge_commit_sha }}
                  tag_name: ${{ env.RELEASE_VERSION }}
                  name: ${{ env.RELEASE_VERSION }}
                  draft: false
                  prerelease: false
                  body: ${{ steps.extract-release-notes.outputs.release_notes }}
                  files: |
                      ./dist/qc-ext.user.js
                      ./dist/qc-ext.meta.js

            - name: Merge main into dev branch
              uses: thomaseizinger/create-pull-request@1.0.0
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  head: main
                  base: develop
                  title: Merge main into develop branch
                  body: |
                      This PR merges the main branch back into develop.
                      This happens to ensure that the updates that happend on the release branch, i.e. CHANGELOG and manifest updates are also present on the dev branch.
