"use strict";(self.webpackChunkquestionable_content_spa=self.webpackChunkquestionable_content_spa||[]).push([[6581],{"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Z:function(){return _toConsumableArray}});var arrayLikeToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js");var unsupportedIterableToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js");function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return(0,arrayLikeToArray.Z)(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||(0,unsupportedIterableToArray.Z)(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},"./src/components/GoToComicDialog/CollapsibleDetails/CollapsibleDetails.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Z:function(){return CollapsibleDetails}});var CollapsibleDetails_module={details:"CollapsibleDetails_details__vsteN"},jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function CollapsibleDetails(_ref){var summary=_ref.summary,children=_ref.children,initiallyOpen=_ref.initiallyOpen,indentChildren=_ref.indentChildren,onToggle=_ref.onToggle;return(0,jsx_runtime.jsxs)("details",{className:CollapsibleDetails_module.details,open:initiallyOpen,onToggle:onToggle,children:[(0,jsx_runtime.jsxs)("summary",{className:"py-4 mb-2 flex items-center font-bold border-0 border-b border-solid border-gray-200",children:[summary,(0,jsx_runtime.jsx)("button",{className:"ml-auto",children:(0,jsx_runtime.jsx)("svg",{className:"fill-current opacity-75 w-4 h-4 -mr-1",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 20 20",children:(0,jsx_runtime.jsx)("path",{d:"M12.95 10.707l.707-.707L8 4.343 6.586 5.757 10.828 10l-4.242 4.243L8 15.657l4.95-4.95z"})})})]}),(0,jsx_runtime.jsx)("div",{className:indentChildren?"mx-5":"",children:children})]})}try{CollapsibleDetails.displayName="CollapsibleDetails",CollapsibleDetails.__docgenInfo={description:"",displayName:"CollapsibleDetails",props:{summary:{defaultValue:null,description:"",name:"summary",required:!0,type:{name:"string"}},initiallyOpen:{defaultValue:null,description:"",name:"initiallyOpen",required:!1,type:{name:"boolean"}},indentChildren:{defaultValue:null,description:"",name:"indentChildren",required:!1,type:{name:"boolean"}},onToggle:{defaultValue:null,description:"",name:"onToggle",required:!1,type:{name:"ReactEventHandler<HTMLDetailsElement>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/GoToComicDialog/CollapsibleDetails/CollapsibleDetails.tsx#CollapsibleDetails"]={docgenInfo:CollapsibleDetails.__docgenInfo,name:"CollapsibleDetails",path:"src/components/GoToComicDialog/CollapsibleDetails/CollapsibleDetails.tsx#CollapsibleDetails"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/GoToComicDialog/ComicList/ComicFilter/ComicFilter.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Z:function(){return ComicFilter},v:function(){return FilterType}});var FilterType,_home_runner_work_client_client_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"),_home_runner_work_client_client_node_modules_babel_runtime_helpers_esm_toConsumableArray_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),_home_runner_work_client_client_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_store_api_itemApiSlice__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/store/api/itemApiSlice.ts"),_itemFilters__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/itemFilters.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");function ComicFilter(_ref){var filters=_ref.filters,setFilters=_ref.setFilters,itemData=(0,_store_api_itemApiSlice__WEBPACK_IMPORTED_MODULE_1__.HV)().data,_useState=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),_useState2=(0,_home_runner_work_client_client_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_3__.Z)(_useState,2),filterText=_useState2[0],setFilterText=_useState2[1],_useState3=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),_useState4=(0,_home_runner_work_client_client_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_3__.Z)(_useState3,2),dropDownOpen=_useState4[0],setDropDownOpen=_useState4[1],_useState5=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0),_useState6=(0,_home_runner_work_client_client_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_3__.Z)(_useState5,2),activeSuggestion=_useState6[0],setActiveSuggestion=_useState6[1],activeRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),inputRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),_addFilter=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((function(filter){setFilters((function(f){return[].concat((0,_home_runner_work_client_client_node_modules_babel_runtime_helpers_esm_toConsumableArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(f),[filter])})),setFilterText(""),inputRef.current&&inputRef.current===document.activeElement||setDropDownOpen(!1)}),[setFilters]),suggestedFilters=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((function(){var index=0,suggestedFilters=[];if(suggestedFilters.push((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(SuggestedFilter,{filter:{type:FilterType.Text,value:filterText},addFilter:function addFilter(f){filterText.trim().length>0&&_addFilter(f)},highlighted:activeSuggestion===index,ref:activeSuggestion===index?activeRef:void 0},"text")),index++,itemData){var _step,_iterator=(0,_home_runner_work_client_client_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper_js__WEBPACK_IMPORTED_MODULE_5__.Z)(function filterItems(allItems,filter){var _ref2=[(0,_itemFilters__WEBPACK_IMPORTED_MODULE_6__.WE)(filter),(0,_itemFilters__WEBPACK_IMPORTED_MODULE_6__.mt)(filter)],filterType=_ref2[0],filterName=_ref2[1];return allItems.filter((function(c){var isRightType="item"===filterType||c.type===filterType,hasName=-1!==c.name.toUpperCase().indexOf(filterName.toUpperCase()),hasShortName=-1!==c.shortName.toUpperCase().indexOf(filterName.toUpperCase());return isRightType&&(hasName||hasShortName)}))}(itemData,filterText));try{var _loop=function _loop(){var item=_step.value;filters.find((function(f){return f.type===FilterType.Item&&f.value.id===item.id}))||(suggestedFilters.push((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(SuggestedFilter,{filter:{type:FilterType.Item,value:item},addFilter:_addFilter,highlighted:activeSuggestion===index,ref:activeSuggestion===index?activeRef:void 0},item.id)),index++)};for(_iterator.s();!(_step=_iterator.n()).done;)_loop()}catch(err){_iterator.e(err)}finally{_iterator.f()}}return filters.find((function(f){return f.type===FilterType.IsGuestComic}))||(suggestedFilters.push((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(SuggestedFilter,{filter:{type:FilterType.IsGuestComic,value:!0},addFilter:_addFilter,highlighted:activeSuggestion===index,ref:activeSuggestion===index?activeRef:void 0},"guest")),index++,suggestedFilters.push((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(SuggestedFilter,{filter:{type:FilterType.IsGuestComic,value:!1},addFilter:_addFilter,highlighted:activeSuggestion===index,ref:activeSuggestion===index?activeRef:void 0},"not-guest")),index++),filters.find((function(f){return f.type===FilterType.IsNonCanon}))||(suggestedFilters.push((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(SuggestedFilter,{filter:{type:FilterType.IsNonCanon,value:!0},addFilter:_addFilter,highlighted:activeSuggestion===index,ref:activeSuggestion===index?activeRef:void 0},"non-canon")),index++,suggestedFilters.push((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(SuggestedFilter,{filter:{type:FilterType.IsNonCanon,value:!1},addFilter:_addFilter,highlighted:activeSuggestion===index,ref:activeSuggestion===index?activeRef:void 0},"not-non-canon")),index++),suggestedFilters}),[itemData,filterText,filters,activeSuggestion,_addFilter]);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){dropDownOpen&&(activeSuggestion>suggestedFilters.length-1&&setActiveSuggestion(suggestedFilters.length-1),activeRef.current&&activeRef.current.scrollIntoView({behavior:"smooth",block:"nearest",inline:"start"}))}),[suggestedFilters,activeSuggestion,dropDownOpen]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{className:"relative",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("span",{className:"fixed inset-0"+(dropDownOpen?"":" hidden"),onClick:function onClick(e){e.preventDefault(),setDropDownOpen(!1)}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{className:"flex flex-wrap border border-black border-solid py-1 relative",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("ul",{className:"p-0 m-0 list-none flex flex-wrap",children:filters.map((function(filter,i){var index=i;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ActiveFilter,{filter:filter,onDelete:function onDelete(){return setFilters((function(f){return f.filter((function(_,i){return i!==index}))}))}},index)}))}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("input",{ref:inputRef,type:"text",spellCheck:"false",className:"border-none outline-none flex-auto",onFocus:function onFocus(){return setDropDownOpen(!0)},onKeyDown:function onKeyDown(e){if("ArrowUp"===e.code||"ArrowDown"===e.code||"Enter"===e.code||"Escape"===e.code)if(e.preventDefault(),"ArrowUp"===e.code)dropDownOpen||setDropDownOpen(!0),setActiveSuggestion((function(s){return s>0?s-1:suggestedFilters.length-1}));else if("ArrowDown"===e.code)dropDownOpen||setDropDownOpen(!0),setActiveSuggestion((function(s){return s<suggestedFilters.length-1?s+1:0}));else if("Enter"===e.code){if(!dropDownOpen)return void setDropDownOpen(!0);activeRef.current&&activeRef.current.querySelector("button").click()}else"Escape"===e.code&&dropDownOpen&&setDropDownOpen(!1);else"Backspace"===e.code&&""===filterText&&filters.length>0&&setFilters((function(f){return f.filter((function(_,i){return i!==filters.length-1}))}))},value:filterText,onChange:function onChange(e){return setFilterText(e.target.value)}})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("ul",{className:"bg-slate-100 list-none m-0 p-1 absolute w-full overflow-y-auto max-h-48 shadow-md border-x border-y-0 border-b border-solid border-slate-500"+(dropDownOpen?"":" hidden"),children:suggestedFilters})]})}!function(FilterType){FilterType[FilterType.Text=0]="Text",FilterType[FilterType.Item=1]="Item",FilterType[FilterType.IsGuestComic=2]="IsGuestComic",FilterType[FilterType.IsNonCanon=3]="IsNonCanon"}(FilterType||(FilterType={}));var SuggestedFilter=(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((function(_ref3,ref){var filterElement,highlighted=_ref3.highlighted,filter=_ref3.filter,addFilter=_ref3.addFilter;switch(filter.type){case FilterType.Text:filterElement=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:["Add"," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("span",{className:"inline-block border border-solid px-2 py-1 rounded-lg border-slate-400 bg-slate-200",children:['Contains text "',filter.value,'"']})," ","filter..."]});break;case FilterType.Item:filterElement=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:["Add"," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("span",{className:"inline-block border border-solid px-2 py-1 rounded-lg border-orange-400 bg-orange-200",children:["Contains ",filter.value.type," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("span",{className:"font-bold",children:filter.value.shortName})]})," ","filter..."]});break;case FilterType.IsGuestComic:case FilterType.IsNonCanon:var color;color=filter.type===FilterType.IsGuestComic?"border-qc-header bg-qc-header-second":"border-qc-non-canon bg-qc-non-canon-second",filterElement=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:["Add"," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("span",{className:"inline-block border border-solid px-2 py-1 rounded-lg text-white "+color,children:[filter.value?"Is":"Is not"," ",filter.type===FilterType.IsGuestComic?"guest comic":"non-canon"]})," ","filter..."]})}return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("li",{className:"my-1 flex"+(highlighted?" bg-blue-500 -m-1 p-1":""),ref:highlighted?ref:void 0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("button",{className:"flex-auto text-left",onClick:function onClick(){addFilter(filter)},children:filterElement})})}));function ActiveFilter(_ref4){var title,contents,colorClassName,filter=_ref4.filter,onDelete=_ref4.onDelete;switch(filter.type){case FilterType.Text:title='Comic contains "'.concat(filter.value,'" in its title or tagline'),contents=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:["Contains"," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("span",{className:"font-bold",children:'"'.concat(filter.value,'"')})," in title/tagline"]}),colorClassName="border-slate-400 bg-slate-200";break;case FilterType.Item:title="Comic contains ".concat(filter.value.type,' "').concat(filter.value.name,'"'),contents=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:["Contains ",filter.value.type," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("span",{className:"font-bold",children:'"'.concat(filter.value.shortName,'"')})]}),colorClassName="border-orange-400 bg-orange-200";break;case FilterType.IsGuestComic:case FilterType.IsNonCanon:var contains;colorClassName="text-white ",filter.type===FilterType.IsGuestComic?(colorClassName+="border-qc-header bg-qc-header-second",contains=(filter.value?"is":"is not")+" guest comic"):(colorClassName+="border-qc-non-canon bg-qc-non-canon-second",contains=(filter.value?"is":"is not")+" non-canon"),title="Comic ".concat(contains),contents=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:[filter.value?"Is":"Is not"," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("span",{children:filter.type===FilterType.IsGuestComic?"guest comic":"non-canon"})]})}return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("li",{className:"mx-1 border border-solid px-2 rounded-lg "+colorClassName,title:title,children:[contents,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("button",{onClick:function onClick(){return onDelete()},title:"Remove filter",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("i",{className:"fa fa-close ml-2","aria-hidden":"true"})})]})}try{ComicFilter.displayName="ComicFilter",ComicFilter.__docgenInfo={description:"",displayName:"ComicFilter",props:{filters:{defaultValue:null,description:"",name:"filters",required:!0,type:{name:"Filter[]"}},setFilters:{defaultValue:null,description:"",name:"setFilters",required:!0,type:{name:"Dispatch<SetStateAction<Filter[]>>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/GoToComicDialog/ComicList/ComicFilter/ComicFilter.tsx#ComicFilter"]={docgenInfo:ComicFilter.__docgenInfo,name:"ComicFilter",path:"src/components/GoToComicDialog/ComicList/ComicFilter/ComicFilter.tsx#ComicFilter"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/GoToComicDialog/ComicList/ComicList.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Z:function(){return ComicList}});var createForOfIteratorHelper=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react=__webpack_require__("./node_modules/react/index.js"),ComicFilter=__webpack_require__("./src/components/GoToComicDialog/ComicList/ComicFilter/ComicFilter.tsx"),Spinner=__webpack_require__("./src/components/Spinner.tsx"),rtk_query_cjs_production_min=__webpack_require__("./node_modules/@reduxjs/toolkit/dist/query/rtk-query.cjs.production.min.js"),comicApiSlice=__webpack_require__("./src/store/api/comicApiSlice.ts"),CollapsibleDetails=__webpack_require__("./src/components/GoToComicDialog/CollapsibleDetails/CollapsibleDetails.tsx"),toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function HighlightedText(_ref){var text=_ref.text,highlightIndexes=_ref.highlights.map((function(highlight){return function getIndicesOf(haystack,needle,caseSensitive){var needleLength=needle.length;if(!needleLength)return[];var index,startIndex=0,indices=[];caseSensitive||(haystack=haystack.toUpperCase(),needle=needle.toUpperCase());for(;-1!==(index=haystack.indexOf(needle,startIndex));)indices.push([index,needleLength]),startIndex=index+needleLength;return indices}(text,highlight)})).flat().sort((function(i,j){return i[0]-j[0]})),combinedHighlights=(0,react.useMemo)((function(){var combinedHighlights=(0,toConsumableArray.Z)(highlightIndexes);restart:for(;;){for(var i=0;i<combinedHighlights.length-1;i++){var current=combinedHighlights[i],next=combinedHighlights[i+1];if(next[0]<current[0]+current[1]){combinedHighlights.splice(i,2,[Math.min(current[0],next[0]),Math.max(current[0]+current[1],next[0]+next[1])]);continue restart}}break}return combinedHighlights}),[highlightIndexes]);if(!highlightIndexes.length)return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:text});var _step,highlightPieces=[],startIndex=0,_iterator=(0,createForOfIteratorHelper.Z)(combinedHighlights);try{for(_iterator.s();!(_step=_iterator.n()).done;){var index=_step.value;startIndex!==index[0]&&highlightPieces.push((0,jsx_runtime.jsx)(react.Fragment,{children:text.substring(startIndex,index[0])},startIndex)),highlightPieces.push((0,jsx_runtime.jsx)("span",{className:"bg-yellow-400 text-black",children:text.substring(index[0],index[0]+index[1])},"".concat(index[0],"-").concat(index[1]))),startIndex=index[0]+index[1]}}catch(err){_iterator.e(err)}finally{_iterator.f()}return startIndex<text.length&&highlightPieces.push((0,jsx_runtime.jsx)(react.Fragment,{children:text.substring(startIndex)},startIndex)),(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:highlightPieces})}try{HighlightedText.displayName="HighlightedText",HighlightedText.__docgenInfo={description:"",displayName:"HighlightedText",props:{text:{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string"}},highlights:{defaultValue:null,description:"",name:"highlights",required:!0,type:{name:"string[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/GoToComicDialog/ComicList/HighlightedText/HighlightedText.tsx#HighlightedText"]={docgenInfo:HighlightedText.__docgenInfo,name:"HighlightedText",path:"src/components/GoToComicDialog/ComicList/HighlightedText/HighlightedText.tsx#HighlightedText"})}catch(__react_docgen_typescript_loader_error){}function GoToComicButton(_ref){var comic=_ref.comic,_onClick=_ref.onClick,highlights=_ref.highlights;return(0,jsx_runtime.jsxs)("button",{className:"text-left",onClick:function onClick(){_onClick(comic)},children:["Comic ",comic.comic,":"," ",(0,jsx_runtime.jsx)(HighlightedText,{text:comic.title,highlights:highlights})," ",comic.tagline&&(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:["(",(0,jsx_runtime.jsx)(HighlightedText,{text:comic.tagline,highlights:highlights}),")"]}),comic.isGuestComic?(0,jsx_runtime.jsx)("span",{className:"bg-qc-header text-white font-bold text-sm rounded-full px-2 py-0.5 ml-2",children:"Guest Comic"}):comic.isNonCanon?(0,jsx_runtime.jsx)("span",{className:"bg-qc-non-canon text-white font-bold text-sm rounded-full px-2 py-0.5 ml-2",children:"Non-canon"}):""]})}try{GoToComicButton.displayName="GoToComicButton",GoToComicButton.__docgenInfo={description:"",displayName:"GoToComicButton",props:{comic:{defaultValue:null,description:"",name:"comic",required:!0,type:{name:"ComicList"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!0,type:{name:"(comic: ComicList) => void"}},highlights:{defaultValue:null,description:"",name:"highlights",required:!0,type:{name:"string[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/GoToComicDialog/ComicList/GoToComicButton/GoToComicButton.tsx#GoToComicButton"]={docgenInfo:GoToComicButton.__docgenInfo,name:"GoToComicButton",path:"src/components/GoToComicDialog/ComicList/GoToComicButton/GoToComicButton.tsx#GoToComicButton"})}catch(__react_docgen_typescript_loader_error){}function ComicList(_ref){var allComicData=_ref.allComicData,subDivideGotoComics=_ref.subDivideGotoComics,onGoToComic=_ref.onGoToComic,isLoading=_ref.isLoading,_useState=(0,react.useState)([]),_useState2=(0,slicedToArray.Z)(_useState,2),filters=_useState2[0],setFilters=_useState2[1],requiresServer=(0,react.useMemo)((function(){return!!filters.find((function(f){return f.type===ComicFilter.v.Item}))}),[filters]),comicsWithItems=(0,comicApiSlice.sy)(requiresServer?filters.filter(isItemFilter).map((function(f){return f.value.id})):rtk_query_cjs_production_min.skipToken).data,filteredComicData=(0,react.useMemo)((function(){return allComicData?function filterComics(allComics,filters,comicsWithItems){var filteredComics;filteredComics=comicsWithItems?allComics.filter((function(c){return comicsWithItems.includes(c.comic)})):allComics;var _step3,_iterator3=(0,createForOfIteratorHelper.Z)(filters);try{var _loop=function _loop(){var filter=_step3.value;if(!isItemFilter(filter))switch(filter.type){case ComicFilter.v.Text:filteredComics=filteredComics.filter((function(c){return-1!==c.title.toUpperCase().indexOf(filter.value.toUpperCase())||c.tagline&&-1!==c.tagline.toUpperCase().indexOf(filter.value.toUpperCase())}));break;case ComicFilter.v.IsGuestComic:filteredComics=filteredComics.filter((function(c){return c.isGuestComic===filter.value}));break;case ComicFilter.v.IsNonCanon:filteredComics=filteredComics.filter((function(c){return c.isNonCanon===filter.value}))}};for(_iterator3.s();!(_step3=_iterator3.n()).done;)_loop()}catch(err){_iterator3.e(err)}finally{_iterator3.f()}return filteredComics}(allComicData,filters,comicsWithItems):allComicData}),[allComicData,filters,comicsWithItems]),_useMemo=(0,react.useMemo)((function(){var comicEntries={};if(subDivideGotoComics){var lastThousandsRange=-1,lastHundredsRange=-1,lastComic=-1,count=0;if(filteredComicData){var _step,_iterator=(0,createForOfIteratorHelper.Z)(filteredComicData);try{for(_iterator.s();!(_step=_iterator.n()).done;){var _comic=_step.value,thousandsRange=(comic=_comic.comic,void 0,comic-comic%1e3),hundredsRange=getHundredsRange(_comic.comic);thousandsRange in comicEntries||(comicEntries[thousandsRange]={}),hundredsRange in comicEntries[thousandsRange]||(comicEntries[thousandsRange][hundredsRange]=[]),comicEntries[thousandsRange][hundredsRange].push((0,jsx_runtime.jsx)("li",{children:(0,jsx_runtime.jsx)(GoToComicButton,{comic:_comic,onClick:function onClick(comic){return onGoToComic(comic.comic)},highlights:filters.filter(isTextFilter).map((function(f){return f.value}))})},_comic.comic)),lastThousandsRange=thousandsRange,lastHundredsRange=hundredsRange,lastComic=_comic.comic,count++}}catch(err){_iterator.e(err)}finally{_iterator.f()}}var thousandDividers=[];for(var _thousandRange in comicEntries){var hundredDividers=[];for(var _hundredRange in comicEntries[_thousandRange]){var _endRange="".concat(Number(_hundredRange)+100);Number(_hundredRange)===lastHundredsRange&&(_endRange="".concat(lastComic)),hundredDividers.push((0,jsx_runtime.jsx)(CollapsibleDetails.Z,{indentChildren:!0,initiallyOpen:count<100,summary:"".concat(Number(_hundredRange)+1,"..").concat(_endRange),children:(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:comicEntries[_thousandRange][_hundredRange]})},_hundredRange))}var endRange="".concat(Number(_thousandRange)+1e3);Number(_thousandRange)===lastThousandsRange&&(endRange="".concat(lastComic)),thousandDividers.push((0,jsx_runtime.jsx)(CollapsibleDetails.Z,{indentChildren:!0,initiallyOpen:count<100,summary:"".concat(Number(_thousandRange)+1,"..").concat(endRange),children:(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:hundredDividers})},_thousandRange))}return[(0,jsx_runtime.jsx)("div",{children:thousandDividers}),count]}var comic,_comicEntries=[];if(filteredComicData){var _step2,_iterator2=(0,createForOfIteratorHelper.Z)(filteredComicData);try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var _comic2=_step2.value;_comicEntries.push((0,jsx_runtime.jsx)("li",{children:(0,jsx_runtime.jsx)(GoToComicButton,{comic:_comic2,onClick:function onClick(comic){return onGoToComic(comic.comic)},highlights:filters.filter(isTextFilter).map((function(f){return f.value}))})},_comic2.comic))}}catch(err){_iterator2.e(err)}finally{_iterator2.f()}}return[(0,jsx_runtime.jsx)("ul",{children:_comicEntries}),_comicEntries.length]}),[filteredComicData,onGoToComic,subDivideGotoComics,filters]),_useMemo2=(0,slicedToArray.Z)(_useMemo,2),comicList=_useMemo2[0],comicCount=_useMemo2[1];return isLoading?(0,jsx_runtime.jsx)("div",{className:"text-center pt-4",children:(0,jsx_runtime.jsx)(Spinner.Z,{loadingText:"Loading...",height:"h-8",width:"w-8",textColor:"text-black",spinnerBgColor:"text-gray-300",spinnerColor:"fill-qc-link"})}):(0,jsx_runtime.jsxs)("div",{className:"min-h-[16rem]",children:[(0,jsx_runtime.jsx)(ComicFilter.Z,{filters:filters,setFilters:setFilters}),0!==filters.length&&(0,jsx_runtime.jsxs)("p",{children:[comicCount," comic titles or taglines match your filters"]}),comicList]})}function getHundredsRange(comic){return comic-comic%100}function isItemFilter(f){return f.type===ComicFilter.v.Item}function isTextFilter(f){return f.type===ComicFilter.v.Text}try{ComicList.displayName="ComicList",ComicList.__docgenInfo={description:"",displayName:"ComicList",props:{allComicData:{defaultValue:null,description:"",name:"allComicData",required:!0,type:{name:"ComicList[]"}},subDivideGotoComics:{defaultValue:null,description:"",name:"subDivideGotoComics",required:!0,type:{name:"boolean"}},onGoToComic:{defaultValue:null,description:"",name:"onGoToComic",required:!0,type:{name:"(comic: number) => void"}},isLoading:{defaultValue:null,description:"",name:"isLoading",required:!0,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/GoToComicDialog/ComicList/ComicList.tsx#ComicList"]={docgenInfo:ComicList.__docgenInfo,name:"ComicList",path:"src/components/GoToComicDialog/ComicList/ComicList.tsx#ComicList"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Spinner.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Z:function(){return Spinner}});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");function Spinner(_ref){var loadingText=_ref.loadingText,height=_ref.height,width=_ref.width,textColor=_ref.textColor,spinnerColor=_ref.spinnerColor,spinnerBgColor=_ref.spinnerBgColor;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg",{"aria-hidden":"true",className:"inline mr-2 ".concat(spinnerBgColor," animate-spin ").concat(spinnerColor," ").concat(height," ").concat(width),viewBox:"0 0 100 101",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path",{d:"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z",fill:"currentColor"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path",{d:"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z",fill:"currentFill"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{className:"".concat(textColor," font-bold"),children:loadingText})]})}try{Spinner.displayName="Spinner",Spinner.__docgenInfo={description:"",displayName:"Spinner",props:{loadingText:{defaultValue:null,description:"",name:"loadingText",required:!0,type:{name:"string"}},height:{defaultValue:null,description:"",name:"height",required:!0,type:{name:"string"}},width:{defaultValue:null,description:"",name:"width",required:!0,type:{name:"string"}},textColor:{defaultValue:null,description:"",name:"textColor",required:!0,type:{name:"string"}},spinnerColor:{defaultValue:null,description:"",name:"spinnerColor",required:!0,type:{name:"string"}},spinnerBgColor:{defaultValue:null,description:"",name:"spinnerBgColor",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Spinner.tsx#Spinner"]={docgenInfo:Spinner.__docgenInfo,name:"Spinner",path:"src/components/Spinner.tsx#Spinner"})}catch(__react_docgen_typescript_loader_error){}},"./src/itemFilters.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){function getTypeFromFilter(filter){var type="item";switch(filter.charAt(0)){case"!":type="cast";break;case"@":type="location";break;case"#":type="storyline"}return type}function getFilterWithoutType(filter){return"item"!==getTypeFromFilter(filter)&&(filter=filter.substring(1)),filter}function filterItems(items,filter){var filteredByType,type=getTypeFromFilter(filter);return filteredByType="item"!==type?items.filter((function(i){return i.type===type})):items,filter=getFilterWithoutType(filter),filteredByType.filter((function(i){return-1!==i.shortName.toUpperCase().indexOf(filter.toUpperCase())||-1!==i.name.toUpperCase().indexOf(filter.toUpperCase())}))}__webpack_require__.d(__webpack_exports__,{MI:function(){return filterItems},WE:function(){return getTypeFromFilter},mt:function(){return getFilterWithoutType}})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,