"use strict";(self.webpackChunkquestionable_content_spa=self.webpackChunkquestionable_content_spa||[]).push([[327],{"./node_modules/@babel/runtime/helpers/esm/slicedToArray.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Z:function(){return _slicedToArray}});var unsupportedIterableToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js");function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||(0,unsupportedIterableToArray.Z)(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},"./src/components/EditorModePanel/DateEditor/DateEditor.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:function(){return Default},Dirty:function(){return Dirty},Disabled:function(){return Disabled},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return DateEditor_stories}});var _Default$parameters,_Default$parameters2,_Default$parameters2$,_Dirty$parameters,_Dirty$parameters2,_Dirty$parameters2$do,_Disabled$parameters,_Disabled$parameters2,_Disabled$parameters3,objectSpread2=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),react=__webpack_require__("./node_modules/react/index.js"),ExpandingEditor=__webpack_require__("./src/components/EditorModePanel/ExpandingEditor/ExpandingEditor.tsx"),ToggleButton=__webpack_require__("./src/components/ToggleButton/ToggleButton.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function DateEditor(_ref){var dateString,niceDateString,disabled=_ref.disabled,label=_ref.label,labelTitle=_ref.labelTitle,inputId=_ref.inputId,dateValue=_ref.dateValue,isAccurateValue=_ref.isAccurateValue,onDateValueChange=_ref.onDateValueChange,onIsAccurateValueChange=_ref.onIsAccurateValueChange,isDateValueDirty=_ref.isDateValueDirty,isIsAccurateValueDirty=_ref.isIsAccurateValueDirty,_useContext=(0,react.useContext)(ExpandingEditor.Q),_useContext2=(0,slicedToArray.Z)(_useContext,2),setExpanded=(_useContext2[0],_useContext2[1]);try{dateString=function toISOLocal(d){return new Date(d.getTime()-6e4*d.getTimezoneOffset()).toISOString().slice(0,-1)}(new Date(dateValue));var niceDate=new Date(dateString);niceDateString="".concat(niceDate.toDateString(),", ").concat(niceDate.toTimeString())}catch(_unused){dateString="",niceDateString=""}return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)("div",{className:"flex min-w-0",children:[(0,jsx_runtime.jsxs)("label",{title:labelTitle,htmlFor:inputId,className:"bg-qc-header text-white py-2 px-4 flex-initial rounded-l-sm rounded-r-none"+(isDateValueDirty?" bg-qc-header-second italic":"")+(disabled?" opacity-75":""),children:[label,isDateValueDirty?"*":""]}),(0,jsx_runtime.jsx)("input",{id:inputId,type:"datetime-local",placeholder:null!=labelTitle?labelTitle:label,value:dateString,title:niceDateString,onChange:function onChange(e){try{onDateValueChange(new Date(e.target.value).toISOString())}catch(_unused2){}},className:"min-w-0 border border-qc-header focus:outline-none flex-auto rounded-none pl-2 disabled:opacity-75"+(disabled?" cursor-not-allowed":""),disabled:disabled,onFocus:function onFocus(){return setExpanded(!0)},onBlur:function onBlur(){return setExpanded(!1)}})]}),(0,jsx_runtime.jsx)("div",{className:"bg-stone-100",children:(0,jsx_runtime.jsx)(ToggleButton.Z,{label:"Accurate Date",checked:isAccurateValue,disabled:disabled,onChange:function onChange(e){return onIsAccurateValueChange(e.target.checked)},dirty:isIsAccurateValueDirty})})]})}try{DateEditor.displayName="DateEditor",DateEditor.__docgenInfo={description:"",displayName:"DateEditor",props:{disabled:{defaultValue:null,description:"",name:"disabled",required:!0,type:{name:"boolean"}},label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}},labelTitle:{defaultValue:null,description:"",name:"labelTitle",required:!1,type:{name:"string"}},inputId:{defaultValue:null,description:"",name:"inputId",required:!0,type:{name:"string"}},dateValue:{defaultValue:null,description:"",name:"dateValue",required:!0,type:{name:"string"}},isAccurateValue:{defaultValue:null,description:"",name:"isAccurateValue",required:!0,type:{name:"boolean"}},isDateValueDirty:{defaultValue:null,description:"",name:"isDateValueDirty",required:!0,type:{name:"boolean"}},isIsAccurateValueDirty:{defaultValue:null,description:"",name:"isIsAccurateValueDirty",required:!0,type:{name:"boolean"}},onDateValueChange:{defaultValue:null,description:"",name:"onDateValueChange",required:!0,type:{name:"(newValue: string) => void"}},onIsAccurateValueChange:{defaultValue:null,description:"",name:"onIsAccurateValueChange",required:!0,type:{name:"(newValue: boolean) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/EditorModePanel/DateEditor/DateEditor.tsx#DateEditor"]={docgenInfo:DateEditor.__docgenInfo,name:"DateEditor",path:"src/components/EditorModePanel/DateEditor/DateEditor.tsx#DateEditor"})}catch(__react_docgen_typescript_loader_error){}var DateEditor_stories={component:DateEditor},Template=function Template(args){var _useArgs=(0,external_STORYBOOK_MODULE_PREVIEW_API_.useArgs)(),_useArgs2=(0,slicedToArray.Z)(_useArgs,2),setArgs=(_useArgs2[0],_useArgs2[1]);return(0,jsx_runtime.jsx)(DateEditor,(0,objectSpread2.Z)((0,objectSpread2.Z)({},args),{},{onDateValueChange:function onDateValueChange(newValue){setArgs({dateValue:newValue,isDateValueDirty:!0}),args.onDateValueChange(newValue)},onIsAccurateValueChange:function onIsAccurateValueChange(newValue){setArgs({isAccurateValue:newValue,isIsAccurateValueDirty:!0}),args.onIsAccurateValueChange(newValue)}}))},NOW=(new Date).toISOString(),Default=Template.bind({});Default.args={label:"Label",labelTitle:"Label Title",dateValue:NOW,isAccurateValue:!1,inputId:"Input Id",isDateValueDirty:!1,isIsAccurateValueDirty:!1,disabled:!1};var Dirty=Template.bind({});Dirty.args=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Default.args),{},{isDateValueDirty:!0,isIsAccurateValueDirty:!0});var Disabled=Template.bind({});Disabled.args=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Default.args),{},{disabled:!0}),Default.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Default.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_Default$parameters=Default.parameters)||void 0===_Default$parameters?void 0:_Default$parameters.docs),{},{source:(0,objectSpread2.Z)({originalSource:"args => {\n  const [_args, setArgs] = useArgs();\n  const onDateValueChange = (newValue: string) => {\n    setArgs({\n      dateValue: newValue,\n      isDateValueDirty: true\n    });\n    args.onDateValueChange(newValue);\n  };\n  const onIsAccurateValueChange = (newValue: boolean) => {\n    setArgs({\n      isAccurateValue: newValue,\n      isIsAccurateValueDirty: true\n    });\n    args.onIsAccurateValueChange(newValue);\n  };\n  return <DateEditor {...args} onDateValueChange={onDateValueChange} onIsAccurateValueChange={onIsAccurateValueChange} />;\n}"},null===(_Default$parameters2=Default.parameters)||void 0===_Default$parameters2||null===(_Default$parameters2$=_Default$parameters2.docs)||void 0===_Default$parameters2$?void 0:_Default$parameters2$.source)})}),Dirty.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Dirty.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_Dirty$parameters=Dirty.parameters)||void 0===_Dirty$parameters?void 0:_Dirty$parameters.docs),{},{source:(0,objectSpread2.Z)({originalSource:"args => {\n  const [_args, setArgs] = useArgs();\n  const onDateValueChange = (newValue: string) => {\n    setArgs({\n      dateValue: newValue,\n      isDateValueDirty: true\n    });\n    args.onDateValueChange(newValue);\n  };\n  const onIsAccurateValueChange = (newValue: boolean) => {\n    setArgs({\n      isAccurateValue: newValue,\n      isIsAccurateValueDirty: true\n    });\n    args.onIsAccurateValueChange(newValue);\n  };\n  return <DateEditor {...args} onDateValueChange={onDateValueChange} onIsAccurateValueChange={onIsAccurateValueChange} />;\n}"},null===(_Dirty$parameters2=Dirty.parameters)||void 0===_Dirty$parameters2||null===(_Dirty$parameters2$do=_Dirty$parameters2.docs)||void 0===_Dirty$parameters2$do?void 0:_Dirty$parameters2$do.source)})}),Disabled.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Disabled.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_Disabled$parameters=Disabled.parameters)||void 0===_Disabled$parameters?void 0:_Disabled$parameters.docs),{},{source:(0,objectSpread2.Z)({originalSource:"args => {\n  const [_args, setArgs] = useArgs();\n  const onDateValueChange = (newValue: string) => {\n    setArgs({\n      dateValue: newValue,\n      isDateValueDirty: true\n    });\n    args.onDateValueChange(newValue);\n  };\n  const onIsAccurateValueChange = (newValue: boolean) => {\n    setArgs({\n      isAccurateValue: newValue,\n      isIsAccurateValueDirty: true\n    });\n    args.onIsAccurateValueChange(newValue);\n  };\n  return <DateEditor {...args} onDateValueChange={onDateValueChange} onIsAccurateValueChange={onIsAccurateValueChange} />;\n}"},null===(_Disabled$parameters2=Disabled.parameters)||void 0===_Disabled$parameters2||null===(_Disabled$parameters3=_Disabled$parameters2.docs)||void 0===_Disabled$parameters3?void 0:_Disabled$parameters3.source)})});var __namedExportsOrder=["Default","Dirty","Disabled"]},"./src/components/EditorModePanel/ExpandingEditor/ExpandingEditor.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Q:function(){return ExpandedContext}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),ExpandedContext=(__webpack_require__("./node_modules/react/jsx-runtime.js"),(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)([!1,function(){}]));function ExpandingEditor(_ref){var children=_ref.children,_useState=useState(!1),_useState2=_slicedToArray(_useState,2),expanded=_useState2[0],setExpanded=_useState2[1];return _jsx("div",{className:"mt-2 transition-[width] "+(expanded?"lg:w-[1080px] lg:shadow-md":"lg:w-60"),children:_jsx(ExpandedContext.Provider,{value:[expanded,setExpanded],children:children})})}try{ExpandingEditor.displayName="ExpandingEditor",ExpandingEditor.__docgenInfo={description:"",displayName:"ExpandingEditor",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/EditorModePanel/ExpandingEditor/ExpandingEditor.tsx#ExpandingEditor"]={docgenInfo:ExpandingEditor.__docgenInfo,name:"ExpandingEditor",path:"src/components/EditorModePanel/ExpandingEditor/ExpandingEditor.tsx#ExpandingEditor"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/ToggleButton/ToggleButton.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{h:function(){return Kind},Z:function(){return ToggleButton}});var Kind,ToggleButton_module={toggle:"ToggleButton_toggle__eAiZn",dot:"ToggleButton_dot__kygA4",background:"ToggleButton_background__bj6Cf",disabled:"ToggleButton_disabled__1hbzd",skinny:"ToggleButton_skinny__hN-en",thick:"ToggleButton_thick__f7yHB"},jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function ToggleButton(_ref){var background,dot,label=_ref.label,kind=_ref.kind,onChange=_ref.onChange,checked=_ref.checked,disabled=_ref.disabled,title=_ref.title,dirty=_ref.dirty;return void 0===kind||kind===Kind.Skinny?(background=(0,jsx_runtime.jsx)("div",{className:"w-10 h-4 bg-gray-400 rounded-full shadow-inner transition-[background-color] "+"".concat(ToggleButton_module.background," ").concat(ToggleButton_module.skinny)+(disabled?" ".concat(ToggleButton_module.disabled):"")}),dot=(0,jsx_runtime.jsx)("div",{className:"absolute w-6 h-6 bg-white rounded-full shadow -left-1 -top-1 transition-transform "+"".concat(ToggleButton_module.dot," ").concat(ToggleButton_module.skinny)+(disabled?" ".concat(ToggleButton_module.disabled):"")})):(background=(0,jsx_runtime.jsx)("div",{className:"block bg-gray-400 w-14 h-8 rounded-full transition-[background-color] "+"".concat(ToggleButton_module.background," ").concat(ToggleButton_module.thick)+(disabled?" ".concat(ToggleButton_module.disabled):"")}),dot=(0,jsx_runtime.jsx)("div",{className:"dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition-transform "+"".concat(ToggleButton_module.dot," ").concat(ToggleButton_module.thick)+(disabled?" ".concat(ToggleButton_module.disabled):"")})),(0,jsx_runtime.jsxs)("label",{className:"flex items-center "+(dirty?"bg-amber-100 ":"")+(disabled?"cursor-not-allowed":"cursor-pointer"),title:title,children:[(0,jsx_runtime.jsxs)("div",{className:"relative",children:[(0,jsx_runtime.jsx)("input",{type:"checkbox",className:"sr-only "+ToggleButton_module.toggle,onChange:onChange,checked:checked,disabled:disabled}),background,dot]}),(0,jsx_runtime.jsxs)("div",{className:"ml-3 font-medium "+(dirty?"italic ":"")+(disabled?"text-gray-500":"text-gray-700"),children:[label,dirty?"*":""]})]})}!function(Kind){Kind[Kind.Skinny=0]="Skinny",Kind[Kind.Thick=1]="Thick"}(Kind||(Kind={}));try{ToggleButton.displayName="ToggleButton",ToggleButton.__docgenInfo={description:"",displayName:"ToggleButton",props:{label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}},kind:{defaultValue:null,description:"",name:"kind",required:!1,type:{name:"enum",value:[{value:"0"},{value:"1"}]}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"ChangeEventHandler<HTMLInputElement>"}},checked:{defaultValue:null,description:"",name:"checked",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},dirty:{defaultValue:null,description:"",name:"dirty",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ToggleButton/ToggleButton.tsx#ToggleButton"]={docgenInfo:ToggleButton.__docgenInfo,name:"ToggleButton",path:"src/components/ToggleButton/ToggleButton.tsx#ToggleButton"})}catch(__react_docgen_typescript_loader_error){}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,